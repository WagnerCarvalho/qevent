# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details

version: 2.1
executors:
  docker-publisher:
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      IMAGE_NAME: qagile/qevent
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - run: 
          name: Check Dependencies
          command: gradle dependencies
      - run:
          name: Test Unit
          path: app/
          command: ./gradlew cleanTest test
      - store_artifacts:
          path: app/build/reports/test
          destination: test/
      - run:
          name: Test KtLint
          path: app/
          command: ./gradlew ktLint
      - store_artifacts:
          path: app/build/reports/kt
          destination: kt/
  docker-build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          path: app/
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  docker-publish:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
      - docker-build:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
      - docker-publish:
          requires:
            - docker-build
          filters:
            branches:
              only: 
                - develop

